@page

"/admin/products"
@layout AdminLayout
@using Entities
@inject NavigationManager NavigationManager
@inject IIceCreamService dbservice
@rendermode InteractiveServer

<div class="admin-content" >
<div class="admin-header" >
<h3 > Manage Ice Cream Products</h3 >
<button class="btn btn-primary" @onclick="ToggleAddForm" >
<i class="fas @(showAddForm ? "fa-times" : "fa-plus")" > </i >
@(showAddForm ? "Cancel" : "Add New")
</button >
</div >

@if (showAddForm) {
    <div class="add-product-form"> <h4>Add New Product</h4> <EditForm Model="newProduct" OnValidSubmit="SaveProduct"> <DataAnnotationsValidator /> <ValidationSummary /> <div class="form-group"> <label>Name</label> <InputText class="form-control" @bind-Value="newProduct.Name" /> <ValidationMessage For="@(() => newProduct.Name)" /> </div> <div class="form-group"> <label>Flavor</label> <InputText class="form-control" @bind-Value="newProduct.Flavor" /> <ValidationMessage For="@(() => newProduct.Flavor)" /> </div> <div class="form-group"> <label>Description</label> <InputTextArea class="form-control" @bind-Value="newProduct.Description" /> <ValidationMessage For="@(() => newProduct.Description)" /> </div> <div class="form-group"> <label>Price</label> <InputNumber class="form-control" @bind-Value="newProduct.Price" /> <ValidationMessage For="@(() => newProduct.Price)" /> </div> <div class="form-group"> <label>Image URL</label> <InputText class="form-control" @bind-Value="newProduct.PhotoUrl" /> <ValidationMessage For="@(() => newProduct.PhotoUrl)" /> </div> <button type="submit" class="btn btn-success">Save Product</button> </EditForm> </div>
}

<div class="product-grid" >
@foreach (var item in products) {
    <div class="product-card"> <div class="product-image-container"> <img src="@item.PhotoUrl" alt="@item.Name" class="product-image" /> </div> <div class="product-details"> <h5>@item.Name</h5> <p class="flavor">@item.Flavor</p> <p class="description">@item.Description</p> <p class="price">$@item.Price.ToString("0.00")</p> <div class="product-actions"> <button class="btn btn-sm btn-primary" @onclick="() => EditProduct(item.IceCreamId)"> <i class="fas fa-edit"></i> Edit </button> <button class="btn btn-sm btn-danger" @onclick="() => DeleteProduct(item.IceCreamId)"> <i class="fas fa-trash"></i> Delete </button> </div> </div> </div>
}

</div >
</div >

@code {
    private List<IceCream> products = new();
    private IceCream newProduct = new();
    private bool showAddForm = false;
    protected override void OnInitialized()

{
    products = dbservice.GetProducts();
}

private void ToggleAddForm() {
    showAddForm = !showAddForm;
    if (showAddForm) newProduct = new IceCream();
}

private void SaveProduct() {
    dbservice .SaveProduct(newProduct);
    products = dbservice.GetProducts();
    showAddForm = false;
    newProduct = new IceCream();
}

private void EditProduct(int id) {
    NavigationManager .NavigateTo($"/admin/products/edit/{id}");
}

private void DeleteProduct(int id) {
    dbservice .DeleteProduct(id);
    products = dbservice.GetProducts();
}

}

<style >
.admin-content {
    flex: 1;
    padding: 20px;
    background-color: #f8f9fa;
}

.admin-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.add-product-form {
    background: white;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.form-group {
    margin-bottom: 15px;
}

.form-control {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
}

.product-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    transition: transform 0.3s;
}

    .product-card:hover {
        transform: translateY(-5px);
    }

.product-image-container {
    height: 200px;
    overflow: hidden;
}

.product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.product-details {
    padding: 15px;
}

    .product-details h5 {
        margin-top: 0;
        color: #333;
    }

.flavor {
    color: #666;
    font-style: italic;
    margin: 5px 0;
}

.description {
    color: #555;
    font-size: 0.9rem;
    margin: 5px 0;
}

.price {
    font-weight: bold;
    color: #ff6b9d;
    margin: 10px 0;
}

.product-actions {
    display: flex;
    gap: 10px;
}

</style >
